# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GuiDraft.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, sip
from PyQt5.QtWidgets import QStackedLayout
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from time import sleep
import numpy as np
import simpleaudio as sa
import sounddevice as sd



class Ui_MainWindow(object):
    #Cue Input Variables
    timer_state = 0
    start_delay = 0
    rest_length = 0
    cue_length = 0
    end_delay = 0
    repetitions = 0
    click_frequency = 0
    carrier_frequency = 0
    AM_frequency = 0


    #Bottom Frame Index
    frameindex = 0

    #Run Time Timer and Cue Duration Timer Are Set Off
    startCountDown = False
    startCountUp = False

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(650, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.start_button = QtWidgets.QPushButton(self.centralwidget)
        self.start_button.setGeometry(QtCore.QRect(520, 510, 113, 32))
        self.start_button.setObjectName("start_button")

        #Top Frame Setup
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 10, 591, 201))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")


        self.RunTimeWidget = QtWidgets.QWidget(self.frame)
        self.RunTimeWidget.setGeometry(QtCore.QRect(330, 172, 150, 30))
        self.RunTimeWidget.setObjectName("RunTimeWidget")


        self.RunTimeLabel = QtWidgets.QLabel(self.RunTimeWidget)
        self.RunTimeLabel.setObjectName("RunTimeLabel")


        self.CueDurationWidget = QtWidgets.QWidget(self.frame)
        self.CueDurationWidget.setGeometry(QtCore.QRect(7, 97, 150, 30))
        self.CueDurationWidget.setObjectName("CueDurationWidget")

        self.CueDurationLabel = QtWidgets.QLabel(self.CueDurationWidget)
        self.CueDurationLabel.setObjectName("CueDurationLabel")

        #Bottom Frame Setup
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(30, 280, 581, 221))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")


        self.DropDownMenuWidget = QtWidgets.QWidget(self.centralwidget)
        self.DropDownMenuWidget.setGeometry(QtCore.QRect(20, 210, 221, 41))
        self.DropDownMenuWidget.setObjectName("DropDownMenuWidget")

        self.drop_down_menu = QtWidgets.QComboBox(self.DropDownMenuWidget)
        self.drop_down_menu.setGeometry(QtCore.QRect(10, 20, 184, 26))
        self.drop_down_menu.setObjectName("drop_down_menu")
        self.drop_down_menu.addItem("")
        self.drop_down_menu.addItem("")
        self.drop_down_menu.addItem("")
        self.drop_down_menu.addItem("")
        self.drop_down_menu.addItem("")
        self.drop_down_menu.addItem("")

        MainWindow.setCentralWidget(self.centralwidget) # should fit window

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 698, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)


        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


        #Stacked Layout for Cues in Top Frame
        self.cueLayout = QStackedLayout()

        #Stacked Layouts for Drop Down Menu Layouts in Bottom Frame
        self.mainlayout = QStackedLayout()
        self.mainlayout2 = QStackedLayout()

        #Setup of Cue Label Layouts
        self.layoutWidgetBlankLabel = QtWidgets.QWidget(self.frame)
        self.layoutWidgetStartDelayLabel = QtWidgets.QWidget(self.frame)

        self.layoutWidgetRestLengthLabelEyeBlinks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelAlpha = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRClicks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRPureTone = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRWhiteNoise = QtWidgets.QWidget(self.frame)

        self.layoutWidgetCueLengthLabelEyeBlinks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelAlpha = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRClicks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRPureTone = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRWhiteNoise = QtWidgets.QWidget(self.frame)


        self.layoutWidgetEndDelayLabel = QtWidgets.QWidget(self.frame)

        #Setup of Drop Down Menu Layouts
        self.layoutWidgetFreeRun = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetFreeRunBlank1 = QtWidgets.QWidget(self.frame_2)

        self.layoutWidgetAlphaEye1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetAlphaEye2 = QtWidgets.QWidget(self.frame_2)

        self.layoutWidgetASSRClicks1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRClicks2 = QtWidgets.QWidget(self.frame_2)


        self.layoutWidgetASSRPureTone1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRPureTone2 = QtWidgets.QWidget(self.frame_2)


        self.layoutWidgetASSRWhiteNoise1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRWhiteNoise2 = QtWidgets.QWidget(self.frame_2)


        #Setup of All Linedits (& 1 CheckBox) for Bottom Frame
        self.start_delay_free_run_lineEdit= QtWidgets.QLineEdit(self.layoutWidgetFreeRun)
        self.start_delay_free_run_lineEdit.setObjectName("start_delay_free_run_lineEdit")

        self.end_delay_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye1)
        self.end_delay_alpha_eye_lineEdit.setObjectName("end_delay_alpha_eye_lineEdit")

        self.rest_length_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye1)
        self.rest_length_alpha_eye_lineEdit.setObjectName("rest_length_alpha_eye_lineEdit")

        self.start_delay_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        self.start_delay_alpha_eye_lineEdit.setObjectName("start_delay_alpha_eye_lineEdit")

        self.cue_length_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        self.cue_length_alpha_eye_lineEdit.setObjectName("cue_length_alpha_eye_lineEdit")

        self.repetitions_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        self.repetitions_alpha_eye_lineEdit.setObjectName("repetitions_alpha_eye_lineEdit")

        self.cue_audio_alpha_eye_text = QtWidgets.QCheckBox(self.layoutWidgetAlphaEye1)
        self.cue_audio_alpha_eye_text.setObjectName("cue_audio_alpha_eye_text")
        self.cue_audio_alpha_eye_text.setText("Cue Audio")

        self.end_delay_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        self.end_delay_ASSR_clicks_lineEdit.setObjectName("end_delay_ASSR_clicks_lineEdit")

        self.rest_length_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        self.rest_length_ASSR_clicks_lineEdit.setObjectName("rest_length_ASSR_clicks_lineEdit")

        self.start_delay_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        self.start_delay_ASSR_clicks_lineEdit.setObjectName("start_delay_ASSR_clicks_lineEdit")

        self.cue_length_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        self.cue_length_ASSR_clicks_lineEdit.setObjectName("cue_length_ASSR_clicks_lineEdit")

        self.repetitions_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        self.repetitions_ASSR_clicks_lineEdit.setObjectName("repetitions_ASSR_clicks_lineEdit")

        self.click_frequency_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        self.click_frequency_ASSR_clicks_lineEdit.setObjectName("click_frequency_ASSR_clicks_lineEdit")

        self.end_delay_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        self.end_delay_ASSR_pure_tone_lineEdit.setObjectName("end_delay_ASSR_pure_tone_lineEdit")

        self.rest_length_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        self.rest_length_ASSR_pure_tone_lineEdit.setObjectName("rest_length_ASSR_pure_tone_lineEdit")

        self.cue_length_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        self.cue_length_ASSR_pure_tone_lineEdit.setObjectName("cue_length_ASSR_pure_tone_lineEdit")

        self.start_delay_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        self.start_delay_ASSR_pure_tone_lineEdit.setObjectName("start_delay_ASSR_pure_tone_lineEdit")

        self.repetitions_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        self.repetitions_ASSR_pure_tone_lineEdit.setObjectName("repetitions_ASSR_pure_tone_lineEdit")

        self.carrier_frequency_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        self.carrier_frequency_ASSR_pure_tone_lineEdit.setObjectName("carrier_frequency_ASSR_pure_tone_lineEdit")

        self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit.setObjectName("amplitude_modulation_frequency_ASSR_pure_tone_lineEdit")

        self.end_delay_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        self.end_delay_ASSR_white_noise_lineEdit.setObjectName("end_delay_ASSR_white_noise_lineEdit")

        self.rest_length_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        self.rest_length_ASSR_white_noise_lineEdit.setObjectName("rest_length_ASSR_white_noise_lineEdit")

        self.start_delay_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        self.start_delay_ASSR_white_noise_lineEdit.setObjectName("start_delay_ASSR_white_noise_lineEdit")

        self.cue_length_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        self.cue_length_ASSR_white_noise_lineEdit.setObjectName("cue_length_ASSR_white_noise_lineEdit")

        self.repetitions_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        self.repetitions_ASSR_white_noise_lineEdit.setObjectName("repetitions_ASSR_white_noise_lineEdit")

        self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit.setObjectName("amplitude_modulation_frequency_ASSR_white_noise_lineEdit")




        #Functions That Complete Cue Label Layouts
        self.blankLabel()
        self.startDelayLabel()
        self.restLengthLabelEyeBlinks()
        self.restLengthLabelAlpha()

        self.restLengthLabelASSRClicks()
        self.restLengthLabelASSRPureTone()
        self.restLengthLabelASSRWhiteNoise()

        self.cueLengthLabelEyeBlinks()
        self.cueLengthLabelAlpha()

        self.cueLengthLabelASSRClicks()
        self.cueLengthLabelASSRPureTone()
        self.cueLengthLabelASSRWhiteNoise()

        self.endDelayLabel()

        #Functions That Create the Layouts For Each Drop Down Menu Option
        self.free_run()
        self.alpha_or_eye_blink()
        self.ASSRClicks()
        self.ASSRPureTone()
        self.ASSRWhiteNoise()

        #Adding Cue Label Layouts to QStackedLayout for Cues
        self.cueLayout.addWidget(self.layoutWidgetBlankLabel)
        self.cueLayout.addWidget(self.layoutWidgetStartDelayLabel)
        self.cueLayout.addWidget(self.layoutWidgetRestLengthLabelEyeBlinks)
        self.cueLayout.addWidget(self.layoutWidgetRestLengthLabelAlpha)
        self.cueLayout.addWidget(self.layoutWidgetRestLengthLabelASSRClicks)
        self.cueLayout.addWidget(self.layoutWidgetRestLengthLabelASSRPureTone)
        self.cueLayout.addWidget(self.layoutWidgetRestLengthLabelASSRWhiteNoise)
        self.cueLayout.addWidget(self.layoutWidgetCueLengthLabelEyeBlinks)
        self.cueLayout.addWidget(self.layoutWidgetCueLengthLabelAlpha)
        self.cueLayout.addWidget(self.layoutWidgetCueLengthLabelASSRClicks)
        self.cueLayout.addWidget(self.layoutWidgetCueLengthLabelASSRPureTone)
        self.cueLayout.addWidget(self.layoutWidgetCueLengthLabelASSRWhiteNoise)
        self.cueLayout.addWidget(self.layoutWidgetEndDelayLabel)

        #Adding Drop Down Menu Layouts to  QStackedLayour for Drop Down Menu
        self.mainlayout.addWidget(self.layoutWidgetFreeRun)
        self.mainlayout.addWidget(self.layoutWidgetAlphaEye1)
        self.mainlayout.addWidget(self.layoutWidgetAlphaEye1)
        self.mainlayout.addWidget(self.layoutWidgetASSRClicks1)
        self.mainlayout.addWidget(self.layoutWidgetASSRPureTone1)
        self.mainlayout.addWidget(self.layoutWidgetASSRWhiteNoise1)

        self.mainlayout2.addWidget(self.layoutWidgetFreeRunBlank1)
        self.mainlayout2.addWidget(self.layoutWidgetAlphaEye2)
        self.mainlayout2.addWidget(self.layoutWidgetAlphaEye2)
        self.mainlayout2.addWidget(self.layoutWidgetASSRClicks2)
        self.mainlayout.addWidget(self.layoutWidgetASSRPureTone2)
        self.mainlayout.addWidget(self.layoutWidgetASSRWhiteNoise2)

        self.retranslateUi(MainWindow)

        #Clicking on Drop Down Menu causes a change in the Bottom Frame
        self.drop_down_menu.activated['int'].connect(self.frameChange)


        #Run Time Duration Setup
        self.runTimeCount = int
        self.countUp = 0
        self.startCountUp = False

        self.CountUpLabel = QtWidgets.QLabel("Run Time Duration", self)
        self.CountUpLabel.setGeometry(465, 175, 150, 30)
        self.CountUpLabel.setStyleSheet("border : 2px solid black")
        self.CountUpLabel.setAlignment(Qt.AlignCenter)

        #Clicking on Start Button Starts Run Time Timer
        self.start_button.clicked.connect(self.RunTimeDurationSetup)

        #Count Down Timer Setup
        self.count = int
        self.countDown = 0
        self.startCountDown = False

        self.CountdownLabel = QtWidgets.QLabel("Cue Duration", self)
        self.CountdownLabel.setGeometry(130, 100, 150, 30)
        self.CountdownLabel.setStyleSheet("border : 2px solid black")
        self.CountdownLabel.setAlignment(Qt.AlignCenter)

        #Clicking on Start Button Starts Implements Cues in Top Frame
        self.start_button.clicked.connect(self.CueSetup)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def free_run(self):

        self.layoutWidgetFreeRun = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetFreeRun.setGeometry(QtCore.QRect(50, -10, 211, 87))
        self.layoutWidgetFreeRun.setObjectName("layoutWidgetFreeRun")


        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidgetFreeRun)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.start_delay_text = QtWidgets.QLabel(self.layoutWidgetFreeRun)
        self.start_delay_text.setObjectName("start_delay_text")
        self.start_delay_text.setText("Start Delay")

        self.horizontalLayout.addWidget(self.start_delay_text)

        #self.start_delay_Free_Run_lineEdit= QtWidgets.QLineEdit(self.layoutWidgetFreeRun)
        #self.start_delay_free_run_lineEdit.setObjectName("start_delay_free_run_lineEdit")

        self.start_delay_free_run_lineEdit.textChanged.connect(self.start_delay_updated)

        self.horizontalLayout.addWidget(self.start_delay_free_run_lineEdit)

        self.verticalLayout.addLayout(self.horizontalLayout)


    def alpha_or_eye_blink(self):

        self.layoutWidgetAlphaEye1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetAlphaEye1.setGeometry(QtCore.QRect(300, 20, 225, 84))
        self.layoutWidgetAlphaEye1.setObjectName("layoutWidgetAlphaEye1")


        self.verticalLayoutRightAlphaEye = QtWidgets.QVBoxLayout(self.layoutWidgetAlphaEye1)
        self.verticalLayoutRightAlphaEye.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutRightAlphaEye.setObjectName("verticalLayoutRightAlphaEye")


        self.horizontalLayoutRightTop = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightTop.setObjectName("horizontalLayoutRightTop")

        self.verticalLayout_Right1 = QtWidgets.QVBoxLayout()
        self.verticalLayout_Right1.setObjectName("verticalLayout_Right1")

        self.end_delay_text = QtWidgets.QLabel(self.layoutWidgetAlphaEye1)
        self.end_delay_text.setObjectName("end_delay_text")
        self.end_delay_text.setText("End Delay")


        self.verticalLayout_Right1.addWidget(self.end_delay_text)

        self.rest_length_text = QtWidgets.QLabel(self.layoutWidgetAlphaEye1)
        self.rest_length_text.setObjectName("rest_length_text")
        self.rest_length_text.setText("Rest Length")


        self.verticalLayout_Right1.addWidget(self.rest_length_text)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayout_Right1)

        self.verticalLayout_Right2= QtWidgets.QVBoxLayout()
        self.verticalLayout_Right2.setObjectName("verticalLayout_Right2")

        #self.end_delay_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye1)
        #self.end_delay_alpha_eye_lineEdit.setObjectName("end_delay_lalpha_eye_ineEdit")

        self.end_delay_alpha_eye_lineEdit.textChanged.connect(self.end_delay_updated)

        self.verticalLayout_Right2.addWidget(self.end_delay_alpha_eye_lineEdit)

        #self.rest_length_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye1)
        #self.rest_length_alpha_eye_lineEdit.setObjectName("rest_length_alpha_eye_lineEdit")

        self.rest_length_alpha_eye_lineEdit.textChanged.connect(self.rest_length_updated)

        self.verticalLayout_Right2.addWidget(self.rest_length_alpha_eye_lineEdit)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayout_Right2)

        self.verticalLayoutRightAlphaEye.addLayout(self.horizontalLayoutRightTop)

        #self.cue_audio_alpha_eye_text = QtWidgets.QCheckBox(self.layoutWidgetAlphaEye1)
        #self.cue_audio_alpha_eye_text.setObjectName("cue_audio_alpha_eye_text")
        #self.cue_audio_alpha_eye_text.setText("Cue Audio")


        self.verticalLayoutRightAlphaEye.addWidget(self.cue_audio_alpha_eye_text)

        self.layoutWidgetAlphaEye2 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetAlphaEye2.setGeometry(QtCore.QRect(50, 20, 211, 87))
        self.layoutWidgetAlphaEye2.setObjectName("layoutWidgetAlphaEye2")


        self.horizontalLayoutLeftAlphaEye = QtWidgets.QHBoxLayout(self.layoutWidgetAlphaEye2)
        self.horizontalLayoutLeftAlphaEye.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayoutLeftAlphaEye.setObjectName("horizontalLayoutLeftAlphaEye")

        self.verticalLayoutLeft1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft1.setObjectName("verticalLayoutLeft1")

        self.start_delay_text = QtWidgets.QLabel(self.layoutWidgetAlphaEye2)
        self.start_delay_text.setObjectName("start_delay_text")
        self.start_delay_text.setText("Start Delay")


        self.verticalLayoutLeft1.addWidget(self.start_delay_text)

        self.cue_length_text = QtWidgets.QLabel(self.layoutWidgetAlphaEye2)
        self.cue_length_text.setObjectName("cue_length_text")
        self.cue_length_text.setText("Cue Length")


        self.verticalLayoutLeft1.addWidget(self.cue_length_text)

        self.repetitions_text = QtWidgets.QLabel(self.layoutWidgetAlphaEye2)
        self.repetitions_text.setObjectName("repetitions_text")
        self.repetitions_text.setText("Repetitions")


        self.verticalLayoutLeft1.addWidget(self.repetitions_text)

        self.horizontalLayoutLeftAlphaEye.addLayout(self.verticalLayoutLeft1)

        self.verticalLayoutLeft2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft2.setObjectName("verticalLayoutLeft2")

        #self.start_delay_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        #self.start_delay_alpha_eye_lineEdit.setObjectName("start_delay_alpha_eye_lineEdit")

        self.start_delay_alpha_eye_lineEdit.textChanged.connect(self.start_delay_updated)

        self.verticalLayoutLeft2.addWidget(self.start_delay_alpha_eye_lineEdit)

        #self.cue_length_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        #self.cue_length_alpha_eye_lineEdit.setObjectName("cue_length_alpha_eye_lineEdit")

        self.cue_length_alpha_eye_lineEdit.textChanged.connect(self.cue_length_updated)

        self.verticalLayoutLeft2.addWidget(self.cue_length_alpha_eye_lineEdit)

        #self.repetitions_alpha_eye_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetAlphaEye2)
        #self.repetitions_alpha_eye_lineEdit.setObjectName("repetitions_alpha_eye_lineEdit")

        self.repetitions_alpha_eye_lineEdit.textChanged.connect(self.repetitions_updated)

        self.verticalLayoutLeft2.addWidget(self.repetitions_alpha_eye_lineEdit)

        self.horizontalLayoutLeftAlphaEye.addLayout(self.verticalLayoutLeft2)


    def ASSRClicks(self):

        self.layoutWidgetASSRClicks1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRClicks1.setGeometry(QtCore.QRect(300, 20, 225, 84)) #84 --> 140
        self.layoutWidgetASSRClicks1.setObjectName("layoutWidgetASSRClicks1")
        self.layoutWidgetASSRClicks1.show()


        self.verticalLayoutRightASSRClicks = QtWidgets.QVBoxLayout(self.layoutWidgetASSRClicks1)
        self.verticalLayoutRightASSRClicks.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutRightASSRClicks.setObjectName("verticalLayoutRightASSRClicks")


        self.horizontalLayoutRightTop = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightTop.setObjectName("horizontalLayoutRightTop")

        self.verticalLayoutRight1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight1.setObjectName("verticalLayoutRight1")

        self.end_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks1)
        self.end_delay_text.setObjectName("end_delay_text")
        self.end_delay_text.setText("End Delay")


        self.verticalLayoutRight1.addWidget(self.end_delay_text)

        self.rest_length_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks1)
        self.rest_length_text.setObjectName("rest_length_text")
        self.rest_length_text.setText("Rest Length")


        self.verticalLayoutRight1.addWidget(self.rest_length_text)

        self.click_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks1)
        self.click_frequency_text.setObjectName("click_frequency_text")
        self.click_frequency_text.setText("Click Frequency")


        self.verticalLayoutRight1.addWidget(self.click_frequency_text)

        #self.amplitude_modulation_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks1)
        #self.amplitude_modulation_frequency_text.setObjectName("amplitude_modulation_frequency_text")
        #self.amplitude_modulation_frequency_text.setText("Amp. Frequency")

        #self.amplitude_modulation_frequency_text.setWordWrap(True)

        #self.verticalLayoutRight1.addWidget(self.amplitude_modulation_frequency_text)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight1)

        self.verticalLayoutRight2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight2.setObjectName("verticalLayoutRight2")

        #self.end_delay_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        #self.end_delay_ASSR_clicks_lineEdit.setObjectName("end_delay_ASSR_clicks_lineEdit")

        self.end_delay_ASSR_clicks_lineEdit.textChanged.connect(self.end_delay_updated)

        self.verticalLayoutRight2.addWidget(self.end_delay_ASSR_clicks_lineEdit)

        #self.rest_length_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        #self.rest_length_ASSR_clicks_lineEdit.setObjectName("rest_length_ASSR_clicks_lineEdit")

        self.rest_length_ASSR_clicks_lineEdit.textChanged.connect(self.rest_length_updated)

        self.verticalLayoutRight2.addWidget(self.rest_length_ASSR_clicks_lineEdit)

        #self.click_frequency_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        #self.click_frequency_ASSR_clicks_lineEdit.setObjectName("click_frequency_ASSR_clicks_lineEdit")

        self.click_frequency_ASSR_clicks_lineEdit.textChanged.connect(self.click_frequency_updated)

        self.verticalLayoutRight2.addWidget(self.click_frequency_ASSR_clicks_lineEdit)

        #self.amplitude_modulation_frequency_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks1)
        #self.amplitude_modulation_frequency_lineEdit.setObjectName("amplitude_modulation_frequency_lineEdit")

        #self.verticalLayoutRight2.addWidget(self.amplitude_modulation_frequency_lineEdit)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight2)

        self.verticalLayoutRightASSRClicks.addLayout(self.horizontalLayoutRightTop)

        #self.cue_audio_text = QtWidgets.QCheckBox(self.layoutWidgetASSRClicks1)
        #self.cue_audio_text.setObjectName("cue_audio_text")
        #self.cue_audio_text.setText("Cue Audio")

        #self.verticalLayoutRight.addWidget(self.cue_audio_text)

        self.layoutWidgetASSRClicks2 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRClicks2.setGeometry(QtCore.QRect(50, 20, 211, 87))
        self.layoutWidgetASSRClicks2.setObjectName("layoutWidgetASSRClicks2")


        self.horizontalLayoutLeftASSRClicks = QtWidgets.QHBoxLayout(self.layoutWidgetASSRClicks2)
        self.horizontalLayoutLeftASSRClicks.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayoutLeftASSRClicks.setObjectName("horizontalLayoutLeftASSRClicks")

        self.verticalLayoutLeft1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft1.setObjectName("verticalLayout")

        self.start_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks2)
        self.start_delay_text.setObjectName("start_delay_text")
        self.start_delay_text.setText("Start Delay")


        self.verticalLayoutLeft1.addWidget(self.start_delay_text)

        self.cue_length_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks2)
        self.cue_length_text.setObjectName("cue_length_text")
        self.cue_length_text.setText("Cue Length")


        self.verticalLayoutLeft1.addWidget(self.cue_length_text)

        self.repetitions_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks2)
        self.repetitions_text.setObjectName("repetitions_text")
        self.repetitions_text.setText("Repetitions")


        self.verticalLayoutLeft1.addWidget(self.repetitions_text)

        #self.carrier_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRClicks2)
        #self.carrier_frequency_text.setObjectName("carrier_frequency_text")
        #self.carrier_frequency_text.setText("Carrier Frequency")

        #self.verticalLayoutLeft1.addWidget(self.carrier_frequency_text)

        self.horizontalLayoutLeftASSRClicks.addLayout(self.verticalLayoutLeft1)

        self.verticalLayoutLeft2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft2.setObjectName("verticalLayoutLeft2")

        #self.start_delay_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        #self.start_delay_ASSR_clicks_lineEdit.setObjectName("start_delay_ASSR_clicks_lineEdit")

        self.start_delay_ASSR_clicks_lineEdit.textChanged.connect(self.start_delay_updated)

        self.verticalLayoutLeft2.addWidget(self.start_delay_ASSR_clicks_lineEdit)

        #self.cue_length_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        #self.cue_length_ASSR_clicks_lineEdit.setObjectName("cue_length_ASSR_clicks_lineEdit")

        self.cue_length_ASSR_clicks_lineEdit.textChanged.connect(self.cue_length_updated)

        self.verticalLayoutLeft2.addWidget(self.cue_length_ASSR_clicks_lineEdit)

        #self.repetitions_ASSR_clicks_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        #self.repetitions_ASSR_clicks_lineEdit.setObjectName("repetitions_ASSR_clicks_lineEdit")

        self.repetitions_ASSR_clicks_lineEdit.textChanged.connect(self.repetitions_updated)

        self.verticalLayoutLeft2.addWidget(self.repetitions_ASSR_clicks_lineEdit)

        #self.carrier_frequency_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRClicks2)
        #self.carrier_frequency_lineEdit.setObjectName("carrier_frequency_lineEdit")

        #self.verticalLayoutLeft2.addWidget(self.carrier_frequency_lineEdit)

        self.horizontalLayoutLeftASSRClicks.addLayout(self.verticalLayoutLeft2)


    def ASSRPureTone(self):

        self.layoutWidgetASSRPureTone1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRPureTone1.setGeometry(QtCore.QRect(300, 20, 225, 112)) #84 --> 140
        self.layoutWidgetASSRPureTone1.setObjectName("layoutWidgetASSRPureTone1")
        self.layoutWidgetASSRPureTone1.show()


        self.verticalLayoutRightASSRPureTone = QtWidgets.QVBoxLayout(self.layoutWidgetASSRPureTone1)
        self.verticalLayoutRightASSRPureTone.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutRightASSRPureTone.setObjectName("verticalLayoutRightASSRPureTone")


        self.horizontalLayoutRightTop = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightTop.setObjectName("horizontalLayoutRightTop")

        self.verticalLayoutRight1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight1.setObjectName("verticalLayoutRight1")

        self.end_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone1)
        self.end_delay_text.setObjectName("end_delay_text")
        self.end_delay_text.setText("End Delay")


        self.verticalLayoutRight1.addWidget(self.end_delay_text)

        self.rest_length_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone1)
        self.rest_length_text.setObjectName("rest_length_text")
        self.rest_length_text.setText("Rest Length")


        self.verticalLayoutRight1.addWidget(self.rest_length_text)

        self.carrier_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone1)
        self.carrier_frequency_text.setObjectName("carrier_frequency_text")
        self.carrier_frequency_text.setText("Carrier Frequency")


        self.verticalLayoutRight1.addWidget(self.carrier_frequency_text)

        self.amplitude_modulation_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone1)
        self.amplitude_modulation_frequency_text.setObjectName("amplitude_modulation_frequency_text")
        self.amplitude_modulation_frequency_text.setText("AM Frequency")

        self.amplitude_modulation_frequency_text.setWordWrap(True)

        self.verticalLayoutRight1.addWidget(self.amplitude_modulation_frequency_text)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight1)

        self.verticalLayoutRight2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight2.setObjectName("verticalLayoutRight2")

        #self.end_delay_ASSR_Pure_Tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        #self.end_delay_ASSR_Pure_Tone_lineEdit.setObjectName("end_delay_ASSR_Pure_Tone_lineEdit")

        self.end_delay_ASSR_pure_tone_lineEdit.textChanged.connect(self.end_delay_updated)

        self.verticalLayoutRight2.addWidget(self.end_delay_ASSR_pure_tone_lineEdit)

        #self.rest_length_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        #self.rest_length_ASSR_pure_tone_lineEdit.setObjectName("rest_length_ASSR_pure_tone_lineEdit")

        self.rest_length_ASSR_pure_tone_lineEdit.textChanged.connect(self.rest_length_updated)

        self.verticalLayoutRight2.addWidget(self.rest_length_ASSR_pure_tone_lineEdit)

        #self.carrier_frequency_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        #self.carrier_frequency_ASSR_pure_tone_lineEdit.setObjectName("carrier_frequency_ASSR_pure_tone_lineEdit")

        self.carrier_frequency_ASSR_pure_tone_lineEdit.textChanged.connect(self.carrier_frequency_updated)

        self.verticalLayoutRight2.addWidget(self.carrier_frequency_ASSR_pure_tone_lineEdit)

        #self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone1)
        #self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit.setObjectName("amplitude_modulation_frequency_ASSR_pure_tone_lineEdit")

        self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit.textChanged.connect(self.AM_frequency_updated)

        self.verticalLayoutRight2.addWidget(self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight2)

        self.verticalLayoutRightASSRPureTone.addLayout(self.horizontalLayoutRightTop)

        #self.cue_audio_text = QtWidgets.QCheckBox(self.layoutWidgetASSRPureTone1)
        #self.cue_audio_text.setObjectName("cue_audio_text")
        #self.cue_audio_text.setText("Cue Audio")

        #self.verticalLayoutRight.addWidget(self.cue_audio_text)

        self.layoutWidgetASSRPureTone2 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRPureTone2.setGeometry(QtCore.QRect(50, 20, 211, 87)) #115
        self.layoutWidgetASSRPureTone2.setObjectName("layoutWidgetASSRPureTone2")


        self.horizontalLayoutLeftASSRPureTone = QtWidgets.QHBoxLayout(self.layoutWidgetASSRPureTone2)
        self.horizontalLayoutLeftASSRPureTone.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayoutLeftASSRPureTone.setObjectName("horizontalLayoutLeftASSRPureTone")

        self.verticalLayoutLeft1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft1.setObjectName("verticalLayout")

        self.start_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone2)
        self.start_delay_text.setObjectName("start_delay_text")
        self.start_delay_text.setText("Start Delay")


        self.verticalLayoutLeft1.addWidget(self.start_delay_text)

        self.cue_length_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone2)
        self.cue_length_text.setObjectName("cue_length_text")
        self.cue_length_text.setText("Cue Length")


        self.verticalLayoutLeft1.addWidget(self.cue_length_text)

        self.repetitions_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone2)
        self.repetitions_text.setObjectName("repetitions_text")
        self.repetitions_text.setText("Repetitions")


        self.verticalLayoutLeft1.addWidget(self.repetitions_text)

        #self.click_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRPureTone2)
        #self.click_frequency_text.setObjectName("click_frequency_text")
        #self.click_frequency_text.setText("Click Frequency")

        #self.verticalLayoutLeft1.addWidget(self.click_frequency_text)

        self.horizontalLayoutLeftASSRPureTone.addLayout(self.verticalLayoutLeft1)

        self.verticalLayoutLeft2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft2.setObjectName("verticalLayoutLeft2")

        #self.start_delay_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        #self.start_delay_ASSR_pure_tone_lineEdit.setObjectName("start_delay_ASSR_pure_tone_lineEdit")

        self.start_delay_ASSR_pure_tone_lineEdit.textChanged.connect(self.start_delay_updated)

        self.verticalLayoutLeft2.addWidget(self.start_delay_ASSR_pure_tone_lineEdit)

        #self.cue_length_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        #self.cue_length_ASSR_pure_tone_lineEdit.setObjectName("cue_length_ASSR_pure_tone_lineEdit")

        self.cue_length_ASSR_pure_tone_lineEdit.textChanged.connect(self.cue_length_updated)

        self.verticalLayoutLeft2.addWidget(self.cue_length_ASSR_pure_tone_lineEdit)

        #self.repetitions_ASSR_pure_tone_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        #self.repetitions_ASSR_pure_tone_lineEdit.setObjectName("repetitions_ASSR_pure_tone_lineEdit")

        self.repetitions_ASSR_pure_tone_lineEdit.textChanged.connect(self.repetitions_updated)

        self.verticalLayoutLeft2.addWidget(self.repetitions_ASSR_pure_tone_lineEdit)

        #self.click_frequency_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRPureTone2)
        #self.click_frequency_lineEdit.setObjectName("click_frequency_lineEdit")

        #self.verticalLayoutLeft2.addWidget(self.click_frequency_lineEdit)

        self.horizontalLayoutLeftASSRPureTone.addLayout(self.verticalLayoutLeft2)

    def ASSRWhiteNoise(self):

        self.layoutWidgetASSRWhiteNoise1 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRWhiteNoise1.setGeometry(QtCore.QRect(300, 20, 225, 84)) #84 --> 140
        self.layoutWidgetASSRWhiteNoise1.setObjectName("layoutWidgetASSRWhiteNoise1")
        self.layoutWidgetASSRWhiteNoise1.show()


        self.verticalLayoutRightASSRWhiteNoise = QtWidgets.QVBoxLayout(self.layoutWidgetASSRWhiteNoise1)
        self.verticalLayoutRightASSRWhiteNoise.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutRightASSRWhiteNoise.setObjectName("verticalLayoutRightASSRWhiteNoise")


        self.horizontalLayoutRightTop = QtWidgets.QHBoxLayout()
        self.horizontalLayoutRightTop.setObjectName("horizontalLayoutRightTop")

        self.verticalLayoutRight1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight1.setObjectName("verticalLayoutRight1")

        self.end_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise1)
        self.end_delay_text.setObjectName("end_delay_text")
        self.end_delay_text.setText("End Delay")


        self.verticalLayoutRight1.addWidget(self.end_delay_text)

        self.rest_length_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise1)
        self.rest_length_text.setObjectName("rest_length_text")
        self.rest_length_text.setText("Rest Length")


        self.verticalLayoutRight1.addWidget(self.rest_length_text)

        #self.carrier_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise1)
        #self.carrier_frequency_text.setObjectName("carrier_frequency_text")
        #self.carrier_frequency_text.setText("Carrier Frequency")


        #self.verticalLayoutRight1.addWidget(self.carrier_frequency_text)

        self.amplitude_modulation_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise1)
        self.amplitude_modulation_frequency_text.setObjectName("amplitude_modulation_frequency_text")
        self.amplitude_modulation_frequency_text.setText("AM Frequency")

        self.amplitude_modulation_frequency_text.setWordWrap(True)

        self.verticalLayoutRight1.addWidget(self.amplitude_modulation_frequency_text)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight1)

        self.verticalLayoutRight2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutRight2.setObjectName("verticalLayoutRight2")

        #self.end_delay_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        #self.end_delay_ASSR_white_noise_lineEdit.setObjectName("end_delay_ASSR_white_noise_lineEdit")

        self.end_delay_ASSR_white_noise_lineEdit.textChanged.connect(self.end_delay_updated)

        self.verticalLayoutRight2.addWidget(self.end_delay_ASSR_white_noise_lineEdit)

        #self.rest_length_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        #self.rest_length_ASSR_white_noise_lineEdit.setObjectName("rest_length_ASSR_white_noise_lineEdit")

        self.rest_length_ASSR_white_noise_lineEdit.textChanged.connect(self.rest_length_updated)

        self.verticalLayoutRight2.addWidget(self.rest_length_ASSR_white_noise_lineEdit)

        #self.carrier_frequency_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        #self.carrier_frequency_lineEdit.setObjectName("carrier_frequency_lineEdit")

        #self.verticalLayoutRight2.addWidget(self.carrier_frequency_lineEdit)

        #self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise1)
        #self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit.setObjectName("amplitude_modulation_frequency_ASSR_white_noise_lineEdit")

        self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit.textChanged.connect(self.AM_frequency_updated)

        self.verticalLayoutRight2.addWidget(self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit)

        self.horizontalLayoutRightTop.addLayout(self.verticalLayoutRight2)

        self.verticalLayoutRightASSRWhiteNoise.addLayout(self.horizontalLayoutRightTop)

        #self.cue_audio_text = QtWidgets.QCheckBox(self.layoutWidgetASSRWhiteNoise1)
        #self.cue_audio_text.setObjectName("cue_audio_text")
        #self.cue_audio_text.setText("Cue Audio")

        #self.verticalLayoutRight.addWidget(self.cue_audio_text)

        self.layoutWidgetASSRWhiteNoise2 = QtWidgets.QWidget(self.frame_2)
        self.layoutWidgetASSRWhiteNoise2.setGeometry(QtCore.QRect(50, 20, 211, 87))
        self.layoutWidgetASSRWhiteNoise2.setObjectName("layoutWidgetASSRWhiteNoise2")


        self.horizontalLayoutLeftASSRWhiteNoise = QtWidgets.QHBoxLayout(self.layoutWidgetASSRWhiteNoise2)
        self.horizontalLayoutLeftASSRWhiteNoise.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayoutLeftASSRWhiteNoise.setObjectName("horizontalLayoutLeftASSRWhiteNoise")

        self.verticalLayoutLeft1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft1.setObjectName("verticalLayout")

        self.start_delay_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise2)
        self.start_delay_text.setObjectName("start_delay_text")
        self.start_delay_text.setText("Start Delay")


        self.verticalLayoutLeft1.addWidget(self.start_delay_text)

        self.cue_length_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise2)
        self.cue_length_text.setObjectName("cue_length_text")
        self.cue_length_text.setText("Cue Length")


        self.verticalLayoutLeft1.addWidget(self.cue_length_text)

        self.repetitions_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise2)
        self.repetitions_text.setObjectName("repetitions_text")
        self.repetitions_text.setText("Repetitions")


        self.verticalLayoutLeft1.addWidget(self.repetitions_text)

        self.click_frequency_text = QtWidgets.QLabel(self.layoutWidgetASSRWhiteNoise2)
        self.click_frequency_text.setObjectName("click_frequency_text")
        self.click_frequency_text.setText("Click Frequency")

        self.verticalLayoutLeft1.addWidget(self.click_frequency_text)

        self.horizontalLayoutLeftASSRWhiteNoise.addLayout(self.verticalLayoutLeft1)

        self.verticalLayoutLeft2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutLeft2.setObjectName("verticalLayoutLeft2")

        #self.start_delay_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        #self.start_delay_ASSR_white_noise_lineEdit.setObjectName("start_delay_ASSR_white_noise_lineEdit")

        self.start_delay_ASSR_white_noise_lineEdit.textChanged.connect(self.start_delay_updated)

        self.verticalLayoutLeft2.addWidget(self.start_delay_ASSR_white_noise_lineEdit)

        #self.cue_length_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        #self.cue_length_ASSR_white_noise_lineEdit.setObjectName("cue_length_ASSR_white_noise_lineEdit")

        self.cue_length_ASSR_white_noise_lineEdit.textChanged.connect(self.cue_length_updated)

        self.verticalLayoutLeft2.addWidget(self.cue_length_ASSR_white_noise_lineEdit)

        #self.repetitions_ASSR_white_noise_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        #self.repetitions_ASSR_white_noise_lineEdit.setObjectName("repetitions_ASSR_white_noise_lineEdit")

        self.repetitions_ASSR_white_noise_lineEdit.textChanged.connect(self.repetitions_updated)

        self.verticalLayoutLeft2.addWidget(self.repetitions_ASSR_white_noise_lineEdit)

        self.click_frequency_lineEdit = QtWidgets.QLineEdit(self.layoutWidgetASSRWhiteNoise2)
        self.click_frequency_lineEdit.setObjectName("click_frequency_lineEdit")

        self.verticalLayoutLeft2.addWidget(self.click_frequency_lineEdit)

        self.horizontalLayoutLeftASSRWhiteNoise.addLayout(self.verticalLayoutLeft2)



#Changes Bottom Frame Based on Drown Down Menu Option Selected
    def frameChange(self, i):
        self.frameindex = i
        self.mainlayout.setCurrentIndex(i)
        self.mainlayout2.setCurrentIndex(i)




    def sound(self,x,z):
        frequency = x
        fs = 44100  # 44100 samples per second
        seconds = z

        # Generate array with seconds*sample_rate steps, ranging between 0 and seconds
        t = np.linspace(0, seconds, seconds * fs, False)

        # Generate a 440 Hz sine wave
        note = np.sin(frequency * t * 2 * np.pi)

        # Ensure that highest value is in 16-bit range
        audio = note * (2**15 - 1) / np.max(np.abs(note))

        # Convert to 16-bit data
        audio = audio.astype(np.int16)

        # Start playback
        play_obj = sa.play_buffer(audio, 1, 2, fs)

        #Wait for playback to finish before exiting
        play_obj.wait_done()



#Count Down Timer Functions
    def showTime(self):
        if self.startCountDown:
            self.countDown -= 1
            if self.countDown == -1:
                self.startCountDown = False

        if self.startCountDown:
            text = str(self.countDown / 10) + " s"
            self.CountdownLabel.setText(text)

    def StartCueDuration(self):
        self.startCountDown = True
        if self.countDown == 0:
            self.startCountDown = False

    def setTimer(self):
        CueDurationTimer = QTimer(self)
        CueDurationTimer.timeout.connect(self.showTime)
        CueDurationTimer.start(100)

#Run Time Timer Functions
    def RunTimeShowTime(self):
        if self.startCountUp:
            self.countUp += 1

        if self.startCountUp:
            text = str(self.countUp / 10) + " s"
            self.CountUpLabel.setText(text)

    def StartRunTimeCueDuration(self):
        self.startCountUp = True

    def setRunTimer(self):
        CueRunTimeDurationTimer = QTimer(self)
        CueRunTimeDurationTimer.timeout.connect(self.RunTimeShowTime)
        CueRunTimeDurationTimer.start(100)


#For Implementing Cues
    def CueSetup(self):

        # start delay loop
        loop = QEventLoop()
        self.cueLayout.setCurrentIndex(1)
        self.countDown = self.start_delay * 10
        self.CountdownLabel.setText(str(self.start_delay))

        self.StartCueDuration()
        self.setTimer()
        QTimer.singleShot(self.start_delay * 1000, loop.exit)
        loop.exec()


        if self.frameindex > 0:

            for repetition in range(self.repetitions+1):
                #rest and cues for ASSR: Clicks
            #    if self.frameindex == 3:

                    #????


                #rest and cues for ASSR: AM Pure Tone
                if self.frameindex == 4:
                    #amplitude of carrier signal
                    A_c = 1
                    #amplitude of modulating signal
                    A_m = 1
                    #Modulated wave
                    AM_Modulated_Wave = [A_c + A_m * np.cos(2*np.pi*self.AM_frequency*t)]*np.cos(2*np.pi*self.carrier_frequency*t)
                    #sampling frequency
                    f_s = 48000
                    #repeat per repetition
                    #for t in range(0,self.cue_length):
                    # plays sounds of AM Modulated Wave
                        sd.play(AM_Modulated_Wave, f_s)
                    #wait for sound to be done playing
                    sd.wait()


                #rest and cues for ASSR: AM White Noise
            #    if self.frameindex ==5:
                    #amplitude of carrier signal
            #        A_c = 1
                    #amplitude of modulating signal
            #        A_m = 1
                    #set carrier frequency to white Noise
                    #self.carrier_frequency =

            #        AM_Modulated_Wave = [A_c + A_m * np.cos(2*np.pi*self.AM_frequency*t)]*np.cos(2*np.pi*self.carrier_frequency*t)
                    #sampling frequency
            #        f_s = 48000
                    # plays sounds of AM Modulated Wave
            #        sd.play(AM_Modulated_Wave, f_s)
                    #wait for sound to be done playing
            #        sd.wait()


                #rest and cues for non-ASSR
                else:
                    # rest length loop
                    loop2 = QEventLoop()
                    self.cueLayout.setCurrentIndex(self.frameindex + 1)
                    self.countDown = self.rest_length * 10
                    self.CountdownLabel.setText(str(self.rest_length))

                    self.StartCueDuration()
                    self.setTimer()
                    QTimer.singleShot(self.rest_length * 1000, loop2.exit)
                    loop2.exec()

                    # cue length loop
                    loop3 = QEventLoop()
                    self.cueLayout.setCurrentIndex(self.frameindex + 6)
                    self.countDown = self.cue_length * 10
                    self.CountdownLabel.setText(str(self.cue_length))


                    self.StartCueDuration()
                    self.setTimer()

                    #A beep noise is set off at the start of every cue (when cue audio checkbox checked)
                    if self.cue_audio_alpha_eye_text.isChecked():
                        self.sound(600,1)


                    QTimer.singleShot(self.cue_length * 1000, loop3.exit)
                    loop3.exec()


        # end delay loop
        loop4 = QEventLoop()
        self.cueLayout.setCurrentIndex(12)
        self.countDown = self.end_delay * 10
        self.CountdownLabel.setText(str(self.end_delay))

        self.StartCueDuration()
        self.setTimer()
        QTimer.singleShot(self.end_delay * 1000, loop4.exit)
        loop4.exec()


        #reset All Cue Options In Bottom Frame
        self.start_delay = 0
        self.start_delay_free_run_lineEdit.clear()
        self.start_delay_alpha_eye_lineEdit.clear()
        self.start_delay_ASSR_clicks_lineEdit.clear()
        self.start_delay_ASSR_pure_tone_lineEdit.clear()
        self.start_delay_ASSR_white_noise_lineEdit.clear()

        self.rest_length = 0
        self.rest_length_alpha_eye_lineEdit.clear()
        self.rest_length_ASSR_clicks_lineEdit.clear()
        self.rest_length_ASSR_pure_tone_lineEdit.clear()
        self.rest_length_ASSR_white_noise_lineEdit.clear()

        self.cue_length = 0
        self.cue_length_alpha_eye_lineEdit.clear()
        self.cue_length_ASSR_clicks_lineEdit.clear()
        self.cue_length_ASSR_pure_tone_lineEdit.clear()
        self.cue_length_ASSR_white_noise_lineEdit.clear()

        self.cue_audio_alpha_eye_text.isChecked(False)

        self.repetitions = 0
        self.repetitions_alpha_eye_lineEdit.clear()
        self.repetitions_ASSR_clicks_lineEdit.clear()
        self.repetitions_ASSR_pure_tone_lineEdit.clear()
        self.repetitions_ASSR_white_noise_lineEdit.clear()

        self.end_delay = 0
        self.startCountUp = False
        self.end_delay_alpha_eye_lineEdit.clear()
        self.end_delay_ASSR_clicks_lineEdit.clear()
        self.end_delay_ASSR_pure_tone_lineEdit.clear()
        self.end_delay_ASSR_white_noise_lineEdit.clear()

        self.click_frequency = 0
        self.click_frequency_ASSR_clicks_lineEdit.clear()

        self.carrier_frequency = 0
        self.carrier_frequency_ASSR_pure_tone_lineEdit.clear()

        self.AM_frequency = 0
        self.amplitude_modulation_frequency_ASSR_pure_tone_lineEdit.clear()
        self.amplitude_modulation_frequency_ASSR_white_noise_lineEdit.clear()


#For Run Time Duration
    def RunTimeDurationSetup(self):
        self.countUp = 0
        self.CountUpLabel.setText(str(0))

        self.StartRunTimeCueDuration()
        self.setRunTimer()


# These functions Update Cue Input Values
    def start_delay_updated(self, str):
        if str:
            self.start_delay = int(str)

    def cue_length_updated(self, str):
        if str:
            self.cue_length = int(str)

    def rest_length_updated(self, str):
        if str:
            self.rest_length = (int(str))

    def end_delay_updated(self, str):
        if str:
            self.end_delay = int(str)

    def repetitions_updated(self, str):
        if str:
            self.repetitions = int(str)

    def click_frequency_updated(self, str):
        if str:
            self.click_frequency = int(str)

    def carrier_frequency_updated(self, str):
        if str:
            self.carrier_frequency = int(str)

    def AM_frequency_updated(self, str):
        if str:
            self.AM_frequency = int(str)



#Cue Labels for Top Frame

    def blankLabel(self):
        self.layoutWidgetBlankLabel = QtWidgets.QWidget(self.frame)
        self.layoutWidgetBlankLabel.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetBlankLabel.setObjectName("layoutWidgetBlankLabel")


    def startDelayLabel(self):
        self.layoutWidgetStartDelayLabel = QtWidgets.QWidget(self.frame)
        self.layoutWidgetStartDelayLabel.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetStartDelayLabel.setObjectName("layoutWidgetStartDelayLabel")

        self.start_delay_label = QtWidgets.QLabel(self.layoutWidgetStartDelayLabel)
        self.start_delay_label.setObjectName("start_delay_label")
        self.start_delay_label.setText("Wait for experiment to begin...")


    def restLengthLabelEyeBlinks(self):
        self.layoutWidgetRestLengthLabelEyeBlinks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelEyeBlinks.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetRestLengthLabelEyeBlinks.setObjectName("layoutWidgetRestLengthLabelEyeBlinks")

        self.rest_length_label_Eye_Blinks = QtWidgets.QLabel(self.layoutWidgetRestLengthLabelEyeBlinks)
        self.rest_length_label_Eye_Blinks.setObjectName("rest_length_label_Eye_Blinks")
        self.rest_length_label_Eye_Blinks.setText("Rest")


    def restLengthLabelAlpha(self):
        self.layoutWidgetRestLengthLabelAlpha = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelAlpha.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetRestLengthLabelAlpha.setObjectName("layoutWidgetRestLengthLabelAlpha")

        self.rest_length_label_Alpha = QtWidgets.QLabel(self.layoutWidgetRestLengthLabelAlpha)
        self.rest_length_label_Alpha.setObjectName("rest_length_label_Alpha")
        self.rest_length_label_Alpha.setText("Eyes Open")

    def restLengthLabelASSRClicks(self):
        self.layoutWidgetRestLengthLabelASSRClicks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRClicks.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetRestLengthLabelASSRClicks.setObjectName("layoutWidgetRestLengthLabelASSRClicks")

        self.rest_length_label_ASSR_Clicks = QtWidgets.QLabel(self.layoutWidgetRestLengthLabelASSRClicks)
        self.rest_length_label_ASSR_Clicks.setObjectName("rest_length_label_ASSR_Clicks")
        self.rest_length_label_ASSR_Clicks.setText("Rest")

    def restLengthLabelASSRPureTone(self):
        self.layoutWidgetRestLengthLabelASSRPureTone = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRPureTone.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetRestLengthLabelASSRPureTone.setObjectName("layoutWidgetRestLengthLabelASSRPureTone")

        self.rest_length_label_ASSR_Pure_Tone = QtWidgets.QLabel(self.layoutWidgetRestLengthLabelASSRPureTone)
        self.rest_length_label_ASSR_Pure_Tone.setObjectName("rest_length_label_ASSR_Pure_Tone")
        self.rest_length_label_ASSR_Pure_Tone.setText("Rest")

    def restLengthLabelASSRWhiteNoise(self):
        self.layoutWidgetRestLengthLabelASSRWhiteNoise = QtWidgets.QWidget(self.frame)
        self.layoutWidgetRestLengthLabelASSRWhiteNoise.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetRestLengthLabelASSRWhiteNoise.setObjectName("layoutWidgetRestLengthLabelASSRWhiteNoise")

        self.rest_length_label_ASSR_White_Noise = QtWidgets.QLabel(self.layoutWidgetRestLengthLabelASSRWhiteNoise)
        self.rest_length_label_ASSR_White_Noise.setObjectName("rest_length_label_ASSR_White_Noise")
        self.rest_length_label_ASSR_White_Noise.setText("Rest")


    def cueLengthLabelEyeBlinks(self):
        self.layoutWidgetCueLengthLabelEyeBlinks= QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelEyeBlinks.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetCueLengthLabelEyeBlinks.setObjectName("layoutWidgetCueLengthLabelEyeBlinks")

        self.cue_length_label_Eye_Blinks = QtWidgets.QLabel(self.layoutWidgetCueLengthLabelEyeBlinks)
        self.cue_length_label_Eye_Blinks.setObjectName("cue_length_label_Eye_Blinks")
        self.cue_length_label_Eye_Blinks.setText("Blink")


    def cueLengthLabelAlpha(self):
        self.layoutWidgetCueLengthLabelAlpha = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelAlpha.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetCueLengthLabelAlpha.setObjectName("layoutWidgetCueLengthLabelAlpha")

        self.cue_length_label_Alpha = QtWidgets.QLabel(self.layoutWidgetCueLengthLabelAlpha)
        self.cue_length_label_Alpha.setObjectName("cue_length_label_Alpha")
        self.cue_length_label_Alpha.setText("Eyes Closed")

    def cueLengthLabelASSRClicks(self):
        self.layoutWidgetCueLengthLabelASSRClicks = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRClicks.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetCueLengthLabelASSRClicks.setObjectName("layoutWidgetCueLengthLabelASSRClicks")

        self.cue_length_label_ASSR_Clicks = QtWidgets.QLabel(self.layoutWidgetCueLengthLabelASSRClicks)
        self.cue_length_label_ASSR_Clicks.setObjectName("cue_length_label_ASSR_Clicks")
        self.cue_length_label_ASSR_Clicks.setText("Clicking Playing")

    def cueLengthLabelASSRPureTone(self):
        self.layoutWidgetCueLengthLabelASSRPureTone = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRPureTone.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetCueLengthLabelASSRPureTone.setObjectName("layoutWidgetCueLengthLabelASSRPureTone")

        self.cue_length_label_ASSR_Pure_Tone = QtWidgets.QLabel(self.layoutWidgetCueLengthLabelASSRPureTone)
        self.cue_length_label_ASSR_Pure_Tone.setObjectName("cue_length_label_ASSR_Pure_Tone")
        self.cue_length_label_ASSR_Pure_Tone.setText("Clicking Playing")

    def cueLengthLabelASSRWhiteNoise(self):
        self.layoutWidgetCueLengthLabelASSRWhiteNoise = QtWidgets.QWidget(self.frame)
        self.layoutWidgetCueLengthLabelASSRWhiteNoise.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetCueLengthLabelASSRWhiteNoise.setObjectName("layoutWidgetCueLengthLabelASSRWhiteNoise")

        self.cue_length_label_ASSR_White_Noise = QtWidgets.QLabel(self.layoutWidgetCueLengthLabelASSRWhiteNoise)
        self.cue_length_label_ASSR_White_Noise.setObjectName("cue_length_label_ASSR_White_Noise")
        self.cue_length_label_ASSR_White_Noise.setText("Clicking Playing")


    def endDelayLabel(self):
        self.layoutWidgetEndDelayLabel = QtWidgets.QWidget(self.frame)
        self.layoutWidgetEndDelayLabel.setGeometry(QtCore.QRect(7, 40, 341, 41))
        self.layoutWidgetEndDelayLabel.setObjectName("layoutWidgetEndDelayLabel")

        self.end_delay_label = QtWidgets.QLabel(self.layoutWidgetEndDelayLabel)
        self.end_delay_label.setObjectName("end_delay_label")
        self.end_delay_label.setText("Wait for experiment to end...")


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.start_button.setText(_translate("MainWindow", "Start"))
        self.RunTimeLabel.setText(_translate("MainWindow", "Total Run Time:"))
        self.CueDurationLabel.setText(_translate("MainWindow", "Cue Duration:"))
        self.drop_down_menu.setItemText(0, _translate("MainWindow", "Free Run"))
        self.drop_down_menu.setItemText(1, _translate("MainWindow", "Eye Blinks"))
        self.drop_down_menu.setItemText(2, _translate("MainWindow", "Alpha"))
        self.drop_down_menu.setItemText(3, _translate("MainWindow", "ASSR: Clicks"))
        self.drop_down_menu.setItemText(4, _translate("MainWindow", "ASSR: AM Pure Tone"))
        self.drop_down_menu.setItemText(5, _translate("MainWindow", "ASSR: AM White Noise"))
